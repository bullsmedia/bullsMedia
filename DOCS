Hello. This document explains in painstaking detail the layout of this code.

Table of Contents:
------------------
Background information
index.html
- Header / Navbar
- Hero image / What We Do
- Services Links
- Events list
- Volunteer form link
- Contact Us ie staff list


Background information
------------------
HTML, CSS, JS, Bootstrap CSS framework
HTML body is scroll locked such that each individual section is its
own scrollable element.

Known issues:
- No smooth scroll on Safari


index.html
------------------
    Header
------------------
lorem


------------------
    Hero image / What We Do
------------------


------------------
    Services links
------------------


------------------
    Events list
------------------
Requires mysql or syntactical equivalent dbms with a database
"bullsmedia_events" with a table as follows

CREATE TABLE `events` (
 `name` varchar(50) NOT NULL COMMENT 'Name of the event',
 `physical_location` varchar(100) NOT NULL COMMENT 'Physical location of event, building and room no. preferred',
 `description` varchar(500) NOT NULL COMMENT 'Description of event',
 `start_time` datetime NOT NULL COMMENT 'Event start date & time',
 `end_time` datetime NOT NULL COMMENT 'Event end date & time',
 `img` varchar(50) DEFAULT NULL COMMENT 'Location of image for event, relative to index.html',
 `id` int(11) NOT NULL AUTO_INCREMENT,
 PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4

Ensure PHP version > 7.0 and php-mysqli or equivalent is available.
- Function mysqli::fetch_all() used in backend code is not
  available in PHP versions less than 7.0
Ensure the credentials in events.php line 4 are correct and user webFetch has
SELECT access on table bullsmedia_events

Execution flow
- The full script is loaded, and at the end, eventsList.getEvents() is called.
- getEvents() is responsible for backend communication with the server
- The server returns an array object with nested arrays for each event in the
  table, and getEvents calls populateEvents with the returned data.
- populateEvents removes all elements inside theeventParent element. 
  "No Events Found" is displayed by default in the event the user has JS 
  disabled.
- For every array inside the eventArray object, a new parent div is created.
- Inside the parent div is a left and right section for formatting.
  - Left contains the start time of the event and its given image.
    - If the window size is less than the Bootstrap large breakpoint, the image
      is hidden.
  - Right contains the event name, physical location, and description.
    - If the window size is less than the Bootstrap large breakpoint, the
      description is hidden.
- After the left and right sections are finished, they are appended to the
  parent element.

Known issues
- Safari is unable to parse date given in the start variable. Possibly due to
  string representation using - instead of / e.g. 12-12-2020 while Safari expects
  12/12/2020

TODO
- format for mobile

------------------
    Volunteer form link
------------------



------------------
    Contact us ie staff list
------------------